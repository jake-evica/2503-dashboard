version: '3'

services:

  db:
    image: postgres:12
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4
    depends_on:
      - db
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      # HTTP router (for ACME challenge)
      - traefik.http.routers.adminer-http.entrypoints=web
      - traefik.http.routers.adminer-http.rule=Host(`adminer.${DOMAIN}`)
      - traefik.http.routers.adminer-http.service=adminer
      - traefik.http.routers.adminer-http.middlewares=redirect-to-https@file
      # HTTPS router
      - traefik.http.routers.adminer-https.entrypoints=websecure
      - traefik.http.routers.adminer-https.rule=Host(`adminer.${DOMAIN}`)
      - traefik.http.routers.adminer-https.tls=true
      - traefik.http.routers.adminer-https.tls.certresolver=le
      - traefik.http.services.adminer.loadbalancer.server.port=8080

  prestart:
    image: jakeevica/backend:latest
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  backend:
    image: jakeevica/backend:latest
    depends_on:
      db:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully
    env_file:
      - .env
    networks:
      - default
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      # HTTP router (for ACME challenge)
      - traefik.http.routers.backend-http.entrypoints=web
      - traefik.http.routers.backend-http.rule=Host(`api.${DOMAIN}`)
      - traefik.http.routers.backend-http.service=backend
      - traefik.http.routers.backend-http.middlewares=redirect-to-https@file
      # HTTPS router
      - traefik.http.routers.backend-https.entrypoints=websecure
      - traefik.http.routers.backend-https.rule=Host(`api.${DOMAIN}`)
      - traefik.http.routers.backend-https.tls=true
      - traefik.http.routers.backend-https.tls.certresolver=le
      - traefik.http.services.backend.loadbalancer.server.port=8000

  frontend:
    image: jakeevica/frontend:latest
    networks:
      - default
      - traefik-public
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      # HTTP router (for ACME challenge)
      - traefik.http.routers.frontend-http.entrypoints=web
      - traefik.http.routers.frontend-http.rule=Host(`app.${DOMAIN}`)
      - traefik.http.routers.frontend-http.service=frontend
      - traefik.http.routers.frontend-http.middlewares=redirect-to-https@file
      # HTTPS router
      - traefik.http.routers.frontend-https.entrypoints=websecure
      - traefik.http.routers.frontend-https.rule=Host(`app.${DOMAIN}`)
      - traefik.http.routers.frontend-https.tls=true
      - traefik.http.routers.frontend-https.tls.certresolver=le
      - traefik.http.services.frontend.loadbalancer.server.port=80

volumes:
  app-db-data:

networks:
  traefik-public:
    external: true
